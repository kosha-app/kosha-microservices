name: Deploy to DEV Passive

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Docker image tag to deploy (leave blank to build new)"
        required: false

env:
  IMAGE_NAME: kosha-microservices-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    outputs:
      image_tag: ${{ steps.bump-version.outputs.new_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Extract and bump version
        id: bump-version
        run: |
          VERSION_FILE="build.gradle.kts"
          COMMIT_MSG=$(git log -1 --pretty=%B)

          echo "Last commit message: $COMMIT_MSG"

          CURRENT_VERSION=$(grep '^version\s*=' $VERSION_FILE | cut -d'"' -f2 | sed 's/-SNAPSHOT//')
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

          if [[ "$COMMIT_MSG" == *"BREAKING CHANGE"* || "$COMMIT_MSG" == *"!:"* ]]; then
            ((MAJOR++))
            MINOR=0
            PATCH=0
          elif [[ "$COMMIT_MSG" == feat:* ]]; then
            ((MINOR++))
            PATCH=0
          else
            ((PATCH++))
          fi

          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "New version: $NEW_VERSION"

          sed -i "s/version = \".*\"/version = \"${NEW_VERSION}\"/" $VERSION_FILE
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "APP_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

          git commit -am "chore: bump version to ${NEW_VERSION}"
          git tag "v${NEW_VERSION}"
          git push origin HEAD:master --tags

      - name: Build Spring Boot JAR
        run: ./gradlew clean build

      - name: Download Datadog Java Agent
        run: curl -L -o dd-java-agent.jar https://dtdg.co/latest-java-tracer

      - name: Copy JAR for Docker
        run: cp build/libs/sage-microservices-*.jar app.jar

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.APP_VERSION }} .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.APP_VERSION }}


  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_DEV_PASSIVE }}
          slot-name: dev-passive
          images: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

#      - name: Smoke Test Dev Green Slot
#        run: |
#          curl -f https://${{ secrets.AZURE_WEBAPP_NAME_DEV }}-green.azurewebsites.net/health || exit 1